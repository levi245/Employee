@page "/employees/view/{Id:int}"

@using EmployeeUI.DTO
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json.Nodes
@inject HttpClient Http
@inject NavigationManager navManager



<div class="row">
    <div class="col-lg-8"></div>


    @if (employee == null)
    {
        <p><em>Loading....</em></p>
    }
    else
    {




        <div class="row">
            <div class="col-lg-8">
                <h1 class="mb-5"> Edit Employee</h1>

                <div class="row mb-3">
                    <label class="col-md-4 col-form-label">Employee ID<input class="form-control-plaintext" value="@Id" readonly></label>



                </div>
                <div class="row mb-3">
                    <label class="col-md-4 col-form-label">Name</label>
                    <input class="form-control" @bind="employeedata.FullName">
                    <span class="text-danger">@errors["FullName"]?[0]</span>

                </div>
                <div class="row mb-3">
                    <label class="col-md-4 col-form-label">Description</label>
                    <input class="form-control" @bind="employeedata.HiredOn">
                    <span class="text-danger">@errors["HiredOn"]?[0]</span>
                </div>
                <div class="row">
                    <div class="offset-md-4 col-md-4 d-grid">
                        <button class="btn btn-primary" @onclick="BackToList">Back</button>
                    </div>
                    
                </div>
            </div>
        </div>
    }
</div>

@code {

    [Parameter]
    public int Id { get; set; }
    public Employee employee { get; set; } = new Employee();
    public EmployeeDto employeedata { get; set; } = new EmployeeDto();
    public JsonNode errors { get; set; } = new JsonObject();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            employee = await Http.GetFromJsonAsync<Employee>($"https://localhost:7211/api/Employee/{Id}");
            employeedata.FullName = employee?.FullName ?? "";
            employeedata.HiredOn = employee.HiredOn;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching employee data: {ex.Message}");
        }
    }

    protected async Task BackToList()
    {
        navManager.NavigateTo("/employees");
        // try
        // {
        //     var response = await Http.PutAsJsonAsync("https://localhost:7211/api/Employee/" + Id, employeedata);
        //     if (response.IsSuccessStatusCode)
        //     {
               
        //     }

        //     else
        //     {
        //         var strResponse = await response.Content.ReadAsStringAsync();
        //         //errors = await response.Content.ReadFromJsonAsync<JsonNode>();

        //         try
        //         {
        //             var jsonResponse = JsonNode.Parse(strResponse);
        //             errors = jsonResponse?["errors"] ?? new JsonObject();
        //         }
        //         catch (Exception ex)
        //         {

        //         }
        //     }
        // }
        // catch (Exception ex)
        // {
        //     Console.WriteLine($"Error saving employee data: {ex.Message}");
        // }
    }
}
